Используется компонентный подход.
Т.е. мы разбиваем интерфейс на отдельные компоненты - независимый модуль приложения или независимый кусок кода, который можно переиспользовать в любом месте приложения неограниченное количество раз. Компонентный подход в свою очередь заключается в создании приложения, основанном на таких компонентах. Суть подхода заключается в том, что нам не нужно писать один и тот же код несколько раз, нам достаточно переиспользовать уже готовый компонент, и при изменении внутренней структуры данного куска кода нам достаточно изменить его всего в одном месте (в самом компоненте).

В нашем проекте 3 компонента:
1. Заголовок с иконкой
2. Каталог товаров
3. Корзина 

Компоненты мы создаем в JS, отображать их будем в HTML. Поэтому создаем папку Components, а в ней отдельные папки для каждого компонентся с их js и css файлами. А в HTML создаем 3 узла этих копонентов - 3 блока с id-шниками. 

В Constans - Храним сам каталог товаров (catalog.js). И ключевые узлы (root.js) header, products, shopping - чтобы мы могли их потом отрендерить содержимое в html.

В Utils - в ней создаем утилиту для работы с локальным хранилищем.


Каждый компонент будет представлять собой class, который содержит методы и свойства.
Почему класс - потому что мы все компоненты подключаем в глобальную область видимости. У каждого компонента будут свои компоненты, которые не должны быть видны за пределами этого компонента. Поэтому такие переменные мы можем спрятать внутри класса, а работать будем непосредственно с экземпляром класса.